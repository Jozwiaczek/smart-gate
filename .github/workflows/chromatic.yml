name: 'Publish to Chromatic'
on: push

jobs:
  chromatic-deployment:
    name: 'Chromatic deployment'
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: 'Git checkout'
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0 # Required to retrieve git history

      # Beginning of yarn setup, keep in sync between all workflows
      - name: Use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: 'Use cached node_modules'
        id: cache-modules
        uses: actions/cache@v2.1.6
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-v${{ matrix.node-version }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: 'Find location of global yarn cache'
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: 'Cache global yarn cache'
        uses: actions/cache@v2.1.6
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: 'Install packages dependency'
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: 'Install www dependency'
        run: cd www && yarn install --frozen-lockfile
      # End of yarn setup

      - name: 'Run client unit tests'
        working-directory: packages/client
        run: yarn test

      # ðŸ‘‡ Checks if the branch is not main and runs Chromatic
      - name: 'Publish to Chromatic'
        if: github.ref != 'refs/heads/main'
        uses: chromaui/action@v1
        with:
          workingDir: packages/client
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true

      # ðŸ‘‡ Checks if the branch is main and accepts all changes in Chromatic
      - name: 'Publish to Chromatic and auto accept changes'
        if: github.ref == 'refs/heads/main'
        uses: chromaui/action@v1
        with:
          workingDir: packages/client
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          autoAcceptChanges: true
          exitZeroOnChanges: true
